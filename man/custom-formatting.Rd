% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print.R
\name{custom-formatting}
\alias{custom-formatting}
\alias{tbl_header}
\alias{tbl_body}
\alias{tbl_footer}
\title{Customizing output for subclasses}
\usage{
tbl_header(x, ..., width = NULL)

tbl_body(x, ..., width = NULL, n = NULL, header = tbl_header(x, width = width))

tbl_footer(
  x,
  ...,
  width = NULL,
  n_extra = NULL,
  body = tbl_body(x, width = width)
)
}
\arguments{
\item{x}{Object to format or print.}

\item{...}{Must be empty.}

\item{width}{Width of text output to generate. This defaults to \code{NULL}, which
means use \code{getOption("tibble.width")} or (if also \code{NULL})
\code{getOption("width")}; the latter displays only the columns that fit on one
screen. You can also set \code{options(tibble.width = Inf)} to override this
default and always print all columns, this may slow down printing
substantially.}

\item{n}{Number of rows to show. If \code{NULL}, the default, will print all rows
if less than option \code{tibble.print_max}. Otherwise, will print
\code{tibble.print_min} rows.}

\item{header}{The value returned by a previous call to \code{tbl_body()}.}

\item{n_extra}{Number of extra columns to print abbreviated information for,
if the width is too small for the entire tibble. If \code{NULL}, the default,
will print information about at most \code{tibble.max_extra_cols} extra columns.}
}
\description{
The experimental \verb{tbl_*()} functions offer a new interface
for overriding parts of the output of a tibble subclass
without overriding the \code{\link[=format]{format()}} or \code{\link[=print]{print()}} methods.

\code{tbl_header()} is responsible for formatting the header.
The default implementation presents the value of \code{\link[=tbl_sum]{tbl_sum()}}
in a tabular format, one row per value.
When the tibble is printed, subtle style is applied to the header.

\code{tbl_body()} is responsible for formatting the body of the table.
The default implementation calls \code{\link[=nrow]{nrow()}} and \code{\link[=head]{head()}} on the input,
delegates the work to \code{\link[pillar:colonnade]{pillar::colonnade()}}
and \code{\link[pillar:squeeze]{pillar::squeeze()}}, and attaches the following attributes
to the output:
\itemize{
\item \code{"squeezed"}: the output of \code{pillar::squeeze()}
\item \code{"rows_missing"}: the number of rows that are not shown in the body,
\code{NA} if unknown
\item \code{"rows_min"}: the minimum number of rows that the input must have
}

This is important for formatting table objects that are proxies
to remote tables or queries where the number of rows may be unknown
in advance.

\code{tbl_footer()} is responsible for formatting the footer of the table.
The default implementation queries \code{\link[=nrow]{nrow()}} and summarizes information
on rows and columns missing from the output.
It accesses the \code{"squeezed"}, \code{"rows_missing"} and \code{"rows_min"} attributes
from the \code{body} argument.
}
\details{
Because the formatting of the footer may depend on computations
already done for formatting the header or the body,
each formatter receives the formatted value of the previous component
as input.
Therefore, if you override \code{tbl_body()}, ensure the return value
is consistent with the default implementation of \code{tbl_footer()}.
Formatters may attach attributes to their return values.
}
